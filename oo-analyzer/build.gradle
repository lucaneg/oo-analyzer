allprojects {
	repositories {
		mavenCentral()
	    jcenter()
	}
}

buildscript {
  	repositories {
  		jcenter()
    	mavenCentral()
  	}
  	dependencies {
    	classpath 'org.ajoberstar.grgit:grgit-core:4.0.2'
    	classpath 'org.ajoberstar.grgit:grgit-gradle:4.0.2'
  	}
}

subprojects {
	apply plugin: 'eclipse'
	apply plugin: 'org.ajoberstar.grgit'
	
	group = 'it.lucaneg'
	version = '0.1'
	
	task allDeps(type: DependencyReportTask) {}
	
	plugins.withType(JavaPlugin) {
		def repo = org.ajoberstar.grgit.Grgit.open(dir: rootProject.projectDir.getParentFile())
		jar.doFirst {
		    manifest {
		    	 attributes(
		            'Implementation-Title': rootProject.name,
		            'Implementation-Version': project.version,
		            'Implementation-Vendor': 'Luca Negrini',
		            'Created-By': "Gradle ${gradle.gradleVersion}",
		            'Built-By': System.properties['user.name'],
		            'Build-Revision': repo.head().abbreviatedId,
		            'Build-Tag': repo.describe(tags: true, always: true),
					'Build-Branch': repo.branch.current().getName(),
					'Build-Clean': repo.status().isClean(),
		            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
		            'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
		            'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
		        )
		    }
	    }
	}
	
	if (it.plugins.hasPlugin('com.github.johnrengelman.shadow')) {
        shadowJar.doFirst {
		    manifest {
		    	 attributes(
		    	 	"Multi-Release": true,
		            'Implementation-Title': project.name,
		            'Implementation-Version': project.version,
		            'Implementation-Vendor': 'Luca Negrini',
		            'Created-By': "Gradle ${gradle.gradleVersion}",
		            'Built-By': System.properties['user.name'],
		            'Build-Revision': repo.head().abbreviatedId,
		            'Build-Tag': repo.describe(tags: true, always: true),
					'Build-Branch': repo.branch.current().getName(),
					'Build-Clean': repo.status().isClean(),
		            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
		            'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
		            'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
		        )
		    }
	    }
    }
}